# Dumb mini makefile:
# 0) assumes clang/GCC like options
# 1) every .c file is to be built into an executable

# if CC is the default (not environment varible nor supplied to make, then default
ifeq ($(origin CC),default)
  CC = clang
endif

IDIRS  = -I../.. -I..
CFLAGS = -O3 ${IDIRS} -march=native -ffp-contract=off -fno-math-errno -fno-trapping-math -Wall -Wextra -Wconversion -Wno-unused-function
LDLIBS = -lm -lmpfr

ODIR    := obj
SRC     := ${wildcard *.c}
HEADERS := ${wildcard *.h}
TARGETS := ${SRC:.c=}
DEPS    := ${addprefix ${ODIR}/, ${SRC:.c=.d}}

all:    ${TARGETS}

clean:
	-${RM} ${TARGETS} ${DEPS}

distclean:	clean
	-${RM} *~

${ODIR}/:
	mkdir -p $@

${ODIR}/%.d:%.c ${ODIR}/
	@-echo "building dependencies: " $<
	@-echo "# autogenerated by Makefile" > $@
	@mkdir -p ${ODIR}
	@$(CC) -MM -MQ${<:.c=} ${IDIRS} ${CFLAGS} $< >> $@

%:%.c
	${CC} ${CFLAGS} -g3 $< -o $@ -L.. ${LDLIBS}

${ODIR}/%.s: %.c | ${ODIR}/
	${CC} ${CFLAGS} -S -masm=intel $< -o $@

-include ${DEPS}
